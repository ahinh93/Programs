Before pthread_attr_init() is called, the program creates a variable called attr. This variable represents a threads' attributes including stack size and scheduling information. pthread_t tid declares the thread itself. init() takes in the pthread attributes as a parameter and initializes them  so they are no longer garbage values to pthreads' default values unless otherwise specified.
Next, pthread_create() that takes three parameters: the first is the thread identifier, which tells the function which thread to operate on along with its corresponding attributes. runner is a parameter being passed, which is a generic object used in C. This object will soon be converted into a separate thread. Finally, the last paremter is an integer passed from the command line.
Now, two threads exist. pthread_join() is called that takes the original thread and NULL, which is equivalent to parent-child fork(), where the parent thread will wait until the child thread terminates before continuing with its own process. 
Finally, pthread_exit() terminates the thread itself.
